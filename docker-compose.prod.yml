version: '3.6'

networks:
  sivnet:
    external: true
  local:
    external: false

volumes:
  pgdata:
  bb-logs:

services:
  # infrastructure
  db:
    image: postgres:10.3-alpine
    environment:
      POSTGRES_DB: busy-beaver
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - "9432:5432"
    networks:
      - local
    labels:
      - traefik.enable=false
  redis:
    image: redis:4.0-alpine
    healthcheck:
      test: ["CMD-SHELL", "redis-cli","ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - local

  # busy-beaver business logic
  app:
    image: alysivji/busy-beaver:latest
    command: webserver
    environment: &app_env_vars
      IN_PRODUCTION: True
      PYTHONPATH: .
      FLASK_APP: /app/busy_beaver/__init__.py
      DATABASE_URI: ${DATABASE_URI}
      REDIS_URI: ${REDIS_URI}
      SENTRY_DSN: ${SENTRY_DSN}
      # integrations
      SLACK_BOTUSER_OAUTH_TOKEN: ${SLACK_BOTUSER_OAUTH_TOKEN}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
      MEETUP_API_KEY: ${MEETUP_API_KEY}
      GITHUB_APP_CLIENT_ID: ${GITHUB_APP_CLIENT_ID}
      GITHUB_APP_CLIENT_SECRET: ${GITHUB_APP_CLIENT_SECRET}
      GITHUB_OAUTH_TOKEN: ${GITHUB_OAUTH_TOKEN}
      GITHUB_SIGNING_SECRET: ${GITHUB_SIGNING_SECRET}
      TWITTER_ACCESS_TOKEN_SECRET: ${TWITTER_ACCESS_TOKEN_SECRET}
      TWITTER_ACCESS_TOKEN: ${TWITTER_ACCESS_TOKEN}
      TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
    volumes: &app_volumes
      - bb-logs:/app/logs/
    networks:
      - sivnet
      - local
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.docker.network=sivnet
      - traefik.backend=busybeaver
      - traefik.frontend.rule=Host:busybeaver.sivji.com
      - traefik.port=5000
  worker:
    image: alysivji/busy-beaver:latest
    command: worker
    environment: *app_env_vars
    volumes: *app_volumes
    networks:
      - local
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false

  # agents to support busy-beaver
  watchtower: #  restart app container when new releases
    image: v2tec/watchtower
    command: --label-enable --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - local
    labels:
      - traefik.enable=false
  datadog:  # collect logs
    build: datadog
    depends_on:
      - app
    links:
      - app
    environment:
      - DD_API_KEY=${DATADOG_API_KEY}
      - DD_HOSTNAME=busybeaver.sivji.com
      - DD_LOGS_ENABLED=true
      - DD_ENABLE_PAYLOADS_EVENTS=false
      - DD_ENABLE_PAYLOADS_SERIES=false
      - DD_ENABLE_PAYLOADS_SERVICE_CHECKS=false
      - DD_ENABLE_PAYLOADS_SKETCHES=false
    volumes:
      - bb-logs:/busy-beaver/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    networks:
      - local
    labels:
      - traefik.enable=false

  # tools
  admin:
    image: jeffknupp/sandman2
    environment:
      DB_TYPE: postgres
      DB_DRIVER: psycopg2
      DB_HOST: db
      DB_PORT: 5432
      DATABASE: busy-beaver
      USERNAME: ${POSTGRES_USER}
      PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 9000:5000
    networks:
      - local
    labels:
      - traefik.enable=false
